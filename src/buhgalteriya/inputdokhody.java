/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buhgalteriya;

import java.sql.*;
import java.util.*;
import java.util.logging.*;
import javax.persistence.*;
import javax.swing.*;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;


public class inputdokhody extends javax.swing.JFrame {
    
    /**
     *
     */
    public static int items=1;
    
    public inputdokhody() {
        initComponents();
        //conn=javaconnect.ConnectDb();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buhgalteriyaPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("buhgalteriyaPU").createEntityManager();
        schetQuery = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT s FROM Schet s");
        schetList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : schetQuery.getResultList();
        schetQuery1 = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT s FROM Schet s");
        schetList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : schetQuery1.getResultList();
        schetQuery2 = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT s FROM Schet s");
        schetList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : schetQuery2.getResultList();
        kategoriiDokhodovQuery = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT k FROM KategoriiDokhodov k");
        kategoriiDokhodovList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : kategoriiDokhodovQuery.getResultList();
        podkategoriiDokhodovQuery = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT p FROM PodkategoriiDokhodov p");
        podkategoriiDokhodovList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : podkategoriiDokhodovQuery.getResultList();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        schetQuery3 = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT s FROM Schet s");
        schetList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : schetQuery3.getResultList();
        podkategoriiDokhodovQuery1 = java.beans.Beans.isDesignTime() ? null : buhgalteriyaPUEntityManager.createQuery("SELECT p FROM PodkategoriiDokhodov p");
        podkategoriiDokhodovList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : podkategoriiDokhodovQuery1.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        subcat = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Доходи");
        setPreferredSize(new java.awt.Dimension(450, 450));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Доходи");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Рахунок");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Категорія");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Підкатегорія");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Сума");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Примітка :");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Додати");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, schetList3, jComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, schetList2, org.jdesktop.beansbinding.ObjectProperty.create(), jComboBox2, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setToolTipText("");
        jComboBox1.setName(""); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, kategoriiDokhodovList, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Назад");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField11.setDragEnabled(true);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar131256194882571.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        jLabel7.setToolTipText("Виберіть рахунок");
        jLabel7.setPreferredSize(new java.awt.Dimension(10, 10));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar131256194882571.png"))); // NOI18N
        jLabel12.setText("jLabel7");
        jLabel12.setToolTipText("Виберіть категоріію доходів");
        jLabel12.setPreferredSize(new java.awt.Dimension(10, 10));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar131256194882571.png"))); // NOI18N
        jLabel13.setText("jLabel7");
        jLabel13.setToolTipText("Виберіть підкатегорію доходів");
        jLabel13.setPreferredSize(new java.awt.Dimension(10, 10));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar131256194882571.png"))); // NOI18N
        jLabel14.setText("jLabel7");
        jLabel14.setToolTipText("Введіть суму");
        jLabel14.setPreferredSize(new java.awt.Dimension(10, 10));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar131256194882571.png"))); // NOI18N
        jLabel15.setText("jLabel7");
        jLabel15.setToolTipText("За бажанням додайте примітку до запису");
        jLabel15.setPreferredSize(new java.awt.Dimension(10, 10));

        subcat.setEditable(true);
        subcat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subcatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(188, 188, 188))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                                        .addComponent(jButton2))
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField11)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(subcat, 0, 289, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboBox2, 0, 289, Short.MAX_VALUE)
                                            .addComponent(jComboBox1, 0, 289, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(498, 414));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
      
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
            
        
        try {
            String prim=jTextField11.getText();//pole primechanie
            Object schet=jComboBox2.getSelectedIndex()+1;//pole schet
            int a=inputdokhody.items;//nomer podkat
            String userName="root",password="";
            
            //System.out.println("suma="+summa+"  prim="+prim+"   schet="+schet+"   a="+a);
            Dokhody d1 = new Dokhody();          
            if(!jTextField1.getText().trim().equals(""))
            {
                double summa=Double.parseDouble(jTextField1.getText());//pole summa
                Connection con;
                Properties p=new Properties();
            p.setProperty("user", "root");
            p.setProperty("password", "");
            p.setProperty("useUnicode", "true"); 
            p.setProperty("useUnicode","true");
            p.setProperty("characterEncoding","cp1251");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dom_buhgal",p);
                System.out.println("Connected to database");
                Statement stmt;
                stmt = con.createStatement();
                stmt.executeUpdate("insert into dokhody (schet,podkategoriy_dokhoda,summa,primechanie) values ("+schet+","+a+","+summa+",'"+prim+"')");
                //d1.getPrimechanie(jTextField11.getText());
            }
            else
            {
                JOptionPane.showMessageDialog(null, "  Не заповнене поле 'СУМА'!!!","Помилка",JOptionPane.ERROR_MESSAGE);
            }   
            jTextField1.setText("");
            jTextField11.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(inputdokhody.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jTextField1.setDocument(new PlainDocument() {
            String chars = "0123456789.";
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                if (chars.indexOf(str) != -1) {
                    if (getLength()< 12) {
                        super.insertString(offs, str, a);
                    }
                }
            }
        });
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(loggin.status==1)
        {
            mainDBadmin mdba=new mainDBadmin();
            mdba.setVisible(true);
            dispose();
        }
        else
        {
            mainDB mdb=new mainDB();
            mdb.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        try {
            Fildcombo();
        } catch (SQLException ex) {
            Logger.getLogger(inputdokhody.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void subcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subcatActionPerformed
      qwe();
    }//GEN-LAST:event_subcatActionPerformed

    public void qwe() 
  {
      Properties p=new Properties();
      p.setProperty("user", "root");
      p.setProperty("password", "");
      p.setProperty("useUnicode", "true"); 
      p.setProperty("useUnicode","true");
      p.setProperty("characterEncoding","cp1251");
      
      try{
      String userName="root",password="";
            Connection con;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dom_buhgal",p);
            
            String select=subcat.getSelectedItem().toString();

            //String select=jComboBox3.getSelectedItem().toString();
            System.out.println("Connected to database(qwe)");
            Statement stmt;
            String query ="select ID_subcategory from podkategorii_dokhodov where NameSubcategory='"+select+"'";
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next())
            {
            inputdokhody.items=rs.getInt("ID_subcategory");
            System.out.println("========"+inputdokhody.items);
            }
      }
      catch(Exception e){}
  }
    
    
    /*public int retnom(int idsc) throws SQLException
    {
        String nomer1=(String)subcat.getSelectedItem();
            System.out.println(nomer1);
            String userName="root",password="";
            Connection con;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dom_buhgal",userName,password);
            System.out.println("Connected to database(retnom)");
            Statement stmt=null;
            String query ="select ID_subcategory from podkategorii_dokhodov where NameSubcategory="+nomer1;
            try {     
            stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(query);
                while (rs.next()) {
                    rs.updateInt("ID_subcategory", idsc);
                    System.out.println("idsc= "+idsc);           
       }
        } catch (SQLException e ) {
            System.out.println("Not acces to database(retnom)");
        } finally {
            if (stmt != null) { stmt.close(); }
        }
            return idsc;
    }*/
    
    public void Fildcombo() throws SQLException {
        Object nomer=jComboBox1.getSelectedIndex()+1;
        subcat.removeAllItems();
        String userName="root",password="";
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dom_buhgal",userName,password);
        System.out.println("Connected to database(Fildcombo)");
        Statement stmt = null;
        String query ="select * from podkategorii_dokhodov where ID_category="+nomer;

        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String name = rs.getString("NameSubcategory");
                subcat.addItem(name);
            }
        } catch (SQLException e ) {
            System.out.println("Not acces to database(Fildcombo)");
        } finally {
            if (stmt != null) { stmt.close(); }
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputdokhody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputdokhody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputdokhody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputdokhody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new inputdokhody().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager buhgalteriyaPUEntityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private java.util.List<buhgalteriya.KategoriiDokhodov> kategoriiDokhodovList;
    private javax.persistence.Query kategoriiDokhodovQuery;
    private java.util.List<buhgalteriya.PodkategoriiDokhodov> podkategoriiDokhodovList;
    private java.util.List<buhgalteriya.PodkategoriiDokhodov> podkategoriiDokhodovList1;
    private javax.persistence.Query podkategoriiDokhodovQuery;
    private javax.persistence.Query podkategoriiDokhodovQuery1;
    private java.util.List<buhgalteriya.Schet> schetList;
    private java.util.List<buhgalteriya.Schet> schetList1;
    private java.util.List<buhgalteriya.Schet> schetList2;
    private java.util.List<buhgalteriya.Schet> schetList3;
    private javax.persistence.Query schetQuery;
    private javax.persistence.Query schetQuery1;
    private javax.persistence.Query schetQuery2;
    private javax.persistence.Query schetQuery3;
    private javax.swing.JComboBox subcat;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private ImageIcon createIcon(String infpng) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
